{"version":3,"file":"component---src-pages-404-js-8ade000f470a9023ba79.js","mappings":"8OAsDA,MAnDkBA,IAA0C,IAAzC,KAAEC,EAAI,UAAEC,EAAY,GAAE,MAAEC,EAAQ,GAAGH,EACpD,MAAM,EAACI,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,KACzC,EAACC,EAAY,EAACC,IAAkBF,EAAAA,EAAAA,WAAS,GAEzCG,EAAa,4FAEnBC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAQC,WAAW,KACvBJ,GAAe,GACfK,KACCV,GAEH,MAAO,IAAMW,aAAaH,IACzB,CAACV,EAAME,IAEV,MAAMU,EAAcA,KAClB,IAAIE,EAAY,EAChB,MAAMC,EAAaf,EAEbgB,EAAWC,YAAY,KAC3Bb,EACEW,EACGG,MAAM,IACNC,IAAI,CAACC,EAAMC,IACG,MAATD,EAAqB,IAErBC,EAAQP,EACHC,EAAWM,GAGbb,EAAWc,KAAKC,MAAsBf,GAAhBc,KAAKE,YAEnCC,KAAK,KAGNX,GAAaC,EAAWW,SAC1BC,cAAcX,GACdT,GAAe,IAGjBO,GAAa,EAAI,GAChB,KAGL,OACEc,EAAAA,cAAA,QAAM3B,UAAW,cAAcK,EAAc,YAAc,MAAML,KAC9DE,GAAeH,ICpBtB,MAvBqB6B,IAEjBD,EAAAA,cAACE,EAAAA,EAAM,KACLF,EAAAA,cAAA,OAAK3B,UAAU,iDACb2B,EAAAA,cAAA,OAAK3B,UAAU,wBACb2B,EAAAA,cAAA,MAAI3B,UAAU,aACZ2B,EAAAA,cAACG,EAAS,CAAC/B,KAAK,MAAME,MAAO,OAE/B0B,EAAAA,cAAA,KAAG3B,UAAU,iBACX2B,EAAAA,cAACG,EAAS,CAAC/B,KAAK,iBAAiBE,MAAO,QAE1C0B,EAAAA,cAAA,KAAG3B,UAAU,iBACX2B,EAAAA,cAACG,EAAS,CAAC/B,KAAK,wDAAwDE,MAAO,QAEjF0B,EAAAA,cAACI,EAAAA,KAAI,CAACC,GAAG,IAAIhC,UAAU,cACrB2B,EAAAA,cAACG,EAAS,CAAC/B,KAAK,UAAUE,MAAO,WAUtC,MAAMgC,EAAOA,IAAMN,EAAAA,cAAA,aAAO,Y","sources":["webpack://gatsby-starter-minimal/./src/components/FuzzyText.js","webpack://gatsby-starter-minimal/./src/pages/404.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './FuzzyText.css'\n\nconst FuzzyText = ({ text, className = '', delay = 0 }) => {\n  const [displayText, setDisplayText] = useState('')\n  const [isAnimating, setIsAnimating] = useState(false)\n\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?'\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsAnimating(true)\n      animateText()\n    }, delay)\n\n    return () => clearTimeout(timer)\n  }, [text, delay])\n\n  const animateText = () => {\n    let iteration = 0\n    const targetText = text\n    \n    const interval = setInterval(() => {\n      setDisplayText(\n        targetText\n          .split('')\n          .map((char, index) => {\n            if (char === ' ') return ' '\n            \n            if (index < iteration) {\n              return targetText[index]\n            }\n            \n            return characters[Math.floor(Math.random() * characters.length)]\n          })\n          .join('')\n      )\n      \n      if (iteration >= targetText.length) {\n        clearInterval(interval)\n        setIsAnimating(false)\n      }\n      \n      iteration += 1 / 3\n    }, 30)\n  }\n\n  return (\n    <span className={`fuzzy-text ${isAnimating ? 'animating' : ''} ${className}`}>\n      {displayText || text}\n    </span>\n  )\n}\n\nexport default FuzzyText","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport FuzzyText from \"../components/FuzzyText\"\nimport \"../components/FuzzyText.css\"\n\nconst NotFoundPage = () => {\n  return (\n    <Layout>\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"fuzzy-text-container\">\n          <h1 className=\"fuzzy-404\">\n            <FuzzyText text=\"404\" delay={500} />\n          </h1>\n          <p className=\"fuzzy-message\">\n            <FuzzyText text=\"Page not found\" delay={1500} />\n          </p>\n          <p className=\"fuzzy-message\">\n            <FuzzyText text=\"Sorry ðŸ˜”, we couldn't find what you were looking for.\" delay={2500} />\n          </p>\n          <Link to=\"/\" className=\"fuzzy-link\">\n            <FuzzyText text=\"Go home\" delay={3500} />\n          </Link>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const Head = () => <title>Not found</title>"],"names":["_ref","text","className","delay","displayText","setDisplayText","useState","isAnimating","setIsAnimating","characters","useEffect","timer","setTimeout","animateText","clearTimeout","iteration","targetText","interval","setInterval","split","map","char","index","Math","floor","random","join","length","clearInterval","React","NotFoundPage","Layout","FuzzyText","Link","to","Head"],"sourceRoot":""}